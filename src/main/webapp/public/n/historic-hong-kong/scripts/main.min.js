(function(D,W,$,Q,injector){
injector.register('App',['Config','Gallery','Carousel','MobileView','SplashScreen','StreetView',
	function(Config,Gallery,Carousel,MobileView,SplashScreen,StreetView){
		console.log(SplashScreen);
		var App = function(){

		};

		App.prototype = {
			render:function(){
                
                this.onPageLoad();
                
				SplashScreen.render();
				Gallery.render();

				SplashScreen.show()
					.then($.proxy(this.onCloseSplashScreen,this));

				$(window).resize($.proxy(this.onResize,this));
                
			},
			onCloseSplashScreen:function(){
				Gallery.show();
			},
			onResize:function(){
				// Carousel.onResize();
				if ($(window).width() < 768){
					StreetView.switchToMobile();
				}else {
					StreetView.switchToDesktop();
				}
			},
            onPageLoad:function(){
                if(getUrlParameter('cred') == 'true'){
                    $('body').addClass('hideCredit');
                }
            }

		};

		var app = new App();

		$(document).ready($.proxy(app.render,app));

		return app;
	}]);

function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : sParameterName[1];
        }
    }
}
injector.register('Carousel',['Config',function(cfg){
	var StreetView = null;
	var Carousel = function(){

	};

	Carousel.prototype = {
		render:function(streetView){
			StreetView = streetView;
			this.el = $('#StreetViewCarousel');
			this.carouselEl = $('#Carousel');
			this.carouselButtonEl = this.el.find('#CarouselButton');
			this.backToGalleryEl = this.el.find('#BackToGallery');
			this.carouselButtonEl.on('click',$.proxy(this.onCarouselButtonClicked,this));
			this.backToGalleryEl.on('click',$.proxy(this.onBackToGalleryClicked,this));
            this.appPath = '/n/historic-hong-kong/';
			cfg.load()
			   .then($.proxy(this.onDataLoaded,this));
			// $(window).resize($.proxy(this.onResize,this));
			
		},
		onResize:function(){
			var self = this;
			setTimeout(function(){
				self.slider.refresh();
			},1000);
		},
		onBackToGalleryClicked:function(){
			StreetView.backToGallery();
		},
		onDataLoaded:function(data){
			var self = this,
				a = [];
			for(var i=0,l=data.length;i<l;i++){
				a.push(['<li index="'+i+'">',
					'<img class="image" index="'+i+'" height="100" width="100" src="' + self.appPath +data[i].img+'"/>',
					'<table class="image-overlay"><tr><td><span class="text">'+data[i].address+'</span></td></tr></table>',
					'</li>'].join(''));
			}
			this.carouselEl.append(a.join(''));
			// this.itemEls = this.carouselEl.find('li');
			this.slider = this.carouselEl.lightSlider({
				loop:true,
		        slideMove:2,
		        pager:false,
		        gallery:false,
		        autoWidth:true,
		        onSliderLoad:function(){
		        	self.itemEls = self.carouselEl.find('li');
					self.itemEls.each(function(i){
						try{
							var idx = parseInt($(this).attr('index'));
							$(this).on('click',$.proxy(self.onItemClicked,self,data[idx],idx));
						}catch(e){

						}
					});
		        },
		    });
		},
		setItem:function(item,index){
			this.carouselEl.attr('current',index);
		},
		slideTo:function(index){
			var w = $(window).width(),
				itemsPerSlide = parseInt(w/110),
				i = parseInt(index / itemsPerSlide);
			// console.log()
			this.slider.goToSlide(i+4);
		},
		onItemClicked:function(item,index){
			this.carouselEl.attr('current',index);
			StreetView.setItem(item,index);
			this.onCarouselButtonClicked();
		},
		onCarouselButtonClicked:function(){
			this.el.toggleClass('show-carousel');
		},
		show:function(){
			this.el.addClass('active');
		},
		hide:function(){
			this.el.removeClass('active');
		}
	};

	return new Carousel();
}]);
injector.register('Config',function(){
	var data = [], def = Q.defer();

	$.ajax({
		url: '/n/historic-hong-kong/data.json',
		dataType:'json',
		success:function(e){
			data = e;
			def.resolve(e);
		}
	});
	return {
		load:function(){
			return def.promise;
		},
		getData:function(){
			return data; 
		},
		isMobile:function(){
			return /Android|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
		},
	};
});
injector.register('Gallery',['Config','Carousel','Map','StreetView',
	'MobileView','InfoBox',function(cfg,Carousel,Map,StreetView,MobileView,InfoBox){
	var Gallery = function(){
		this.el = null;
		this.itemEls = null;
		this.desktop = true;
		this.itemContainerEl = null;
	};

	Gallery.prototype = {
		render:function(){
			var self = this;
			this.el = $('#Gallery');
			Map.render(this);
			InfoBox.render();
            this.appPath = '/n/historic-hong-kong/';
			this.itemContainerEl = this.el.find('#ItemContainer');
			this.menuToggleButtonEl = this.el.find('#MenuToggleButton');
			this.galleryEmbedCodeEl = this.el.find('#GalleryEmbedCode');
			this.embedCodeButtonEl = this.el.find('#EmbedCodeButton');
			this.infoButtonEl = this.el.find('.info-button');
			this.infoButtonEl.on('click',$.proxy(this.onInfoButtonClicked,this));
			this.menuToggleButtonEl.on('click',$.proxy(this.onMenuToggleClicked,this));
			this.embedCodeButtonEl.on('click',$.proxy(this.onShowEmbedCodeClicked,this));
			cfg.load()
				.then($.proxy(this.onDataLoaded,this));
		},
		onInfoButtonClicked:function(){
			InfoBox.show();
			this.onMenuToggleClicked();
		},
		onShowEmbedCodeClicked:function(){
			this.galleryEmbedCodeEl.toggleClass('active');
		},
		onMenuToggleClicked:function(){
			this.el.toggleClass('active');
			this.menuToggleButtonEl.toggleClass('active');
		},
		show:function(){
			this.el.show();
			Map.onResize();
		},
		scrollToItem:function(index){
			var item = this.itemEls.eq(index);
			this.itemEls.removeClass('selected');
			item.addClass('selected');
			$('html,body').animate({
	          		scrollTop: item.offset().top
	        	}, 1000,function(){
	        	item.addClass('animated pulse');
	        	setTimeout(function(){
	        		item.removeClass('animated')
	        			.removeClass('pulse');

	        	},800);
	        });
		},
		hide:function(){
			this.el.hide();
		},
		onItemClick:function(index){
			this.hide();
			this.el.removeClass('active');
			this.menuToggleButtonEl.removeClass('active');
			this.itemEls.removeClass('selected');
			StreetView.show(this.data[index],index)
				.then($.proxy(this.onStreetViewClosed,this));
			Carousel.slideTo(index);
		},
		onStreetViewClosed:function(){
			this.show();
		},
		onDataLoaded:function(data){
			var self = this;
			this.data = data;
			//create items
			this.itemContainerEl
				.append(_.map(data,function(e){
					return ['<div class="col-xs-12 col-sm-6 col-md-4 col-lg-3">',
								'<div class="gallery-item" title="'+e.descr+'">',
									'<div class="item-image-container" style="background-image:url('+ self.appPath +e.img+');">',
										'<div class="item-image-overlay">'+e.descr+'</div>',
									'</div>',
									'<div class="item-title">',
										'<div class="item-name">'+e.address+'</div>',
										'<div class="item-year">'+e.date+'</div>',
									'</div>',
								'</div>',
							'</div>'].join('');
				}).join(''));
			//attach event listeners
			this.itemEls = this.itemContainerEl.find('.gallery-item');
			this.itemEls
				.each(function(e){
					$(this).on('click',$.proxy(self.onItemClick,self,e));
				});
		}
	};

	return new Gallery();
}]);
injector.register('InfoBox',['Config',function(cfg){
	var InfoBox = function(){
		this.el = null;
	};

	InfoBox.prototype = {
		render:function(){
			this.el = $('#InfoBox');
			this.backdropEl = this.el.find('.backdrop');
			this.closeButtonEl = this.el.find('.close-button');
			this.closeButtonEl.on('click',$.proxy(this.hide,this));
			this.backdropEl.on('click',$.proxy(this.hide,this));

		},
		show:function(){
			this.el.show();
		},
		hide:function(){
			this.el.hide();
		}
	};

	return new InfoBox();
}]);
injector.register('Map',['Config','StreetView',function(cfg,StreetView){
	var Gallery = null;
	var Map = function(){
		this.el = null;
		this.markers = [];
	};
	Map.prototype = {
		render:function(gallery){
			Gallery = gallery;
			this.el = $('#GalleryMapCanvas');
			this.el.css('height','100%');
			var mapOptions = {
                center: {lat: 22.294642, lng:114.154323},
                zoom: 13,
                zoomControl:true};

            this.map = new google.maps.Map(this.el.get(0),mapOptions);

            cfg.load()
        		.then($.proxy(this.onDataLoaded,this));

        	$(window).resize($.proxy(this.onResize,this));
        	StreetView.render(this.map);
		},
		onMarkerClicked:function(marker,i){
			Gallery.scrollToItem(i);
		},
		onDataLoaded:function(data){
			this.data = data;
			var image = {
				url: self.appPath + '/img/pin.png',
				// This marker is 20 pixels wide by 32 pixels high.
				size: new google.maps.Size(30, 40),
				// The origin for this image is (0, 0).
				origin: new google.maps.Point(0, 0),
				// The anchor for this image is the base of the flagpole at (0, 32).
				anchor: new google.maps.Point(15, 40)
			},marker;
			for(var i=0,l=data.length;i<l;i++){
				marker = new google.maps.Marker({
					position:{lat:data[i].lat,lng:data[i].lng},
					map:this.map,
					icon:image,
					title:data[i].address
				});
				marker.userData = data[i];
				marker.addListener('click',$.proxy(this.onMarkerClicked,this,marker,i));
				this.markers.push(marker);
			}

			setTimeout(function(){
				$(window).trigger('resize');
			},500);

			// google.maps.event.trigger(this.map, 'resize');
		},
		onResize:function(){
			google.maps.event.trigger(this.map, 'resize');
			this.map.setCenter({lat: 22.294642, lng:114.154323});
		}
	};

	return new Map();
}]);
injector.register('MiniMap',['Config',function(cfg){
	var MiniMap = function(){

	};

	MiniMap.prototype = {
		render:function(){
			var mapOptions = {
                center: {lat: 22.307753, lng:114.083636},
                zoom: 14,
                zoomControl:true,
                linksControl: false,
                disableDefaultUI: true,
                mapTypeControl: false,
		        panControl: false,
		        addressControlOptions: {
		          position: google.maps.ControlPosition.BOTTOM_CENTER
		        },
		        zoomControlOptions: {
		          style: google.maps.ZoomControlStyle.SMALL
		        },
                styles : [
                            {
                                "featureType": "all",
                                "elementType": "labels.text.fill",
                                "stylers": [
                                    {
                                        "hue": "#ff0012"
                                    }
                                ]
                            },
                            {
                                "featureType": "administrative",
                                "elementType": "labels.text",
                                "stylers": [
                                    {
                                        "hue": "#ff0012"
                                    }
                                ]
                            },
                            {
                                "featureType": "administrative",
                                "elementType": "labels.text.fill",
                                "stylers": [
                                    {
                                        "color": "#e80f1e"
                                    }
                                ]
                            },
                            {
                                "featureType": "administrative",
                                "elementType": "labels.text.stroke",
                                "stylers": [
                                    {
                                        "gamma": "10.00"
                                    },
                                    {
                                        "weight": "4.25"
                                    },
                                    {
                                        "lightness": "100"
                                    }
                                ]
                            },
                            {
                                "featureType": "administrative",
                                "elementType": "labels.icon",
                                "stylers": [
                                    {
                                        "color": "#e80f1e"
                                    }
                                ]
                            },
                            {
                                "featureType": "landscape",
                                "elementType": "all",
                                "stylers": [
                                    {
                                        "color": "#f2f2f2"
                                    }
                                ]
                            },
                            {
                                "featureType": "poi",
                                "elementType": "all",
                                "stylers": [
                                    {
                                        "visibility": "off"
                                    }
                                ]
                            },
                            {
                                "featureType": "road",
                                "elementType": "all",
                                "stylers": [
                                    {
                                        "saturation": -100
                                    },
                                    {
                                        "lightness": 45
                                    }
                                ]
                            },
                            {
                                "featureType": "road.highway",
                                "elementType": "all",
                                "stylers": [
                                    {
                                        "visibility": "simplified"
                                    }
                                ]
                            },
                            {
                                "featureType": "road.arterial",
                                "elementType": "labels.icon",
                                "stylers": [
                                    {
                                        "visibility": "off"
                                    }
                                ]
                            },
                            {
                                "featureType": "transit",
                                "elementType": "all",
                                "stylers": [
                                    {
                                        "visibility": "off"
                                    }
                                ]
                            },
                            {
                                "featureType": "water",
                                "elementType": "all",
                                "stylers": [
                                    {
                                        "color": "#232323"
                                    },
                                    {
                                        "visibility": "on"
                                    }
                                ]
                            }
                        ]
            },image = {
				url: self.appPath + '/img/pin.png',
				// This marker is 20 pixels wide by 32 pixels high.
				size: new google.maps.Size(30, 40),
				// The origin for this image is (0, 0).
				origin: new google.maps.Point(0, 0),
				// The anchor for this image is the base of the flagpole at (0, 32).
				anchor: new google.maps.Point(15, 40)
			};
			this.el = $('#StreetViewMiniMap');
			this.map = new google.maps.Map(this.el.get(0),mapOptions);
			this.marker = new google.maps.Marker({
					position:{lat: 22.307753, lng:114.083636},
					map:this.map,
					icon:image,
					title:'none'
				});
			this.marker.userData = null;
			$(window).resize($.proxy(this.onResize,this));
		},
		setStreetView:function(view){
			this.map.setStreetView(view);
		},
		setItem:function(item,index){
            var self = this;
            this.item = item;
            this.index = index;
			this.marker.userData = item;
			this.marker.setPosition({
				lat:item.lat,
				lng:item.lng
			});
			this.marker.setTitle(item.address);
            setTimeout(function(){
    			self.map.setCenter({
    				lat:item.lat,
    				lng:item.lng
    			});
                
            },300);
		},
		onResize:function(){
			google.maps.event.trigger(this.map, 'resize');
            if (this.item){
                this.map.setCenter({
                    lat:this.item.lat,
                    lng:this.item.lng
                });
            }
		},
	};

	return new MiniMap();
}]);
injector.register('MobileView',['Config','Gallery',function(cfg,Gallery){
	var MobileView = function(){

	};

	MobileView.prototype = {
		render:function(){
			this.el = $('#MobileView');
			this.imageSliderEl = this.el.find('#ImageSlider');
			this.oldImageEl = this.el.find('#OldImage');
			this.newImageEl = this.el.find('#NewImage');
            this.appPath = '/n/historic-hong-kong/';
			// this.slider = this.imageSliderEl.twentytwenty({default_offset_pct:200});
			//console.log(this.slider);
		},
		show:function(item,index){
			var self = this;
			
            var newEl= (['<div id="ImageSlider">',
				'<img id="OldImage" src="'+ self.appPath+item.oldimg+'"/>',
				'<img id="NewImage" src="'+ self.appPath+item.img+'"/>',
				'</div>']);
            this.el.hide().empty().append(newEl.join('')).fadeIn();
			this.imageSliderEl = this.el.find('#ImageSlider');
			this.oldImageEl = this.el.find('#OldImage');
			this.newImageEl = this.el.find('#NewImage');
			this.oldImageEl.on('load',function(){
				self.imageSliderEl.twentytwenty();
			});
			// this.def = Q.defer();
			// this.oldImageEl.css('background-image','url('+item.oldimg+')');
			// this.newImageEl.css('background-image','url('+item.img+')');
			// setTimeout(function(){
			// 	self.imageSliderEl.twentytwenty();
			// },1000);

			this.el.show();
			// return this.def.promise;
		},
		hide:function(){
			this.el.hide();
		}
	};

	return new MobileView();
}]);
injector.register('SplashScreen',['Config',function(cfg){
	
	var SplashScreen = function(){
		this.def = null;
		this.el = null;
	};

	SplashScreen.prototype = {
		render:function(){
			this.el = $('#SplashScreen');
			this.exploreButtonEl = this.el.find('#ExploreButton');
			this.exploreButtonEl.on('click',$.proxy(this.onExploreButtonClicked,this));
		},
		onExploreButtonClicked:function(){
			this.hide();
		},
		show:function(){
			this.def = Q.defer();
			this.el.show();
			return this.def.promise;
		},
		hide:function(){
			this.el.hide();
			this.def.resolve();
		}
	};


	return new SplashScreen();
}]);
injector.register('StreetView',['Config','Carousel','MiniMap','MobileView','InfoBox',
	function(cfg,Carousel,MiniMap,MobileView,InfoBox){
	var Gallery = null;
	var StreetView = function(){
		this.el = null;
		this.map = null;
		this.data = null;
		this.desktop = true;
		this.streetView = null;
		this.markers = [];
		this.def = null;
		this.active = false;
	};

	StreetView.prototype = {
		render:function(map,gallery){
			Gallery = injector.get('Gallery');
			MiniMap.render(this);
			MobileView.render(this);
			var panoramaOptions = {
                position: {lat: 22.2875971, lng: 114.1504675},
                pov:{
                  heading: 191.79, 
                  pitch: 10 
                },
                zoomControl:false,		        
		        addressControl:false,
		        linksControl: false,
		        panControl: false,
		        enableCloseButton: false,
		        zoom:1
            };
            
            // this.map = map;
			this.el = $('#StreetView');
			this.descriptionEl = this.el.find('#DescriptionSection');
			this.addressEl = this.el.find("#AddressText");
			this.streetViewCanvasEl = this.el.find("#StreetViewCanvas");
			this.addressButtonEl = this.el.find('#AddressButton');
			this.descriptionTextEl = this.el.find('#DescriptionText');
			this.toGalleryButtonEl = this.el.find('#ToGalleryButton');
			this.streetEmbedEl = this.el.find('#StreetViewEmbedCode');
			this.streetToggleButtonEl = this.el.find('#StreetToggleButton');
			this.streetEmbedButtonEl = this.el.find('#StreetEmbedButton');
			this.infoButtonEl = this.el.find('.info-button');
			this.nextItemEl = this.el.find('#NextItem');
			this.prevItemEl = this.el.find('#PrevItem');
			this.infoButtonEl.on('click',$.proxy(this.onInfoClicked,this));
			this.nextItemEl.on('click',$.proxy(this.goToNext,this));
			this.streetInfoNameEl = this.el.find('#StreetInfoStreetName');
			this.streetInfoYearEl = this.el.find('#StreetInfoStreetYear');
			this.prevItemEl.on('click',$.proxy(this.goToPrev,this));
			this.streetEmbedButtonEl.on('click',$.proxy(this.onStreetEmbedClicked,this));
			this.streetToggleButtonEl.on('click',$.proxy(this.onMenuToggleClicked,this));
			this.toGalleryButtonEl.on('click',$.proxy(this.onToGalleryClicked,this));
			this.addressButtonEl.on('click',$.proxy(this.onAddressButtonClicked,this));
			this.streetView = new google.maps.StreetViewPanorama(this.streetViewCanvasEl.get(0), panoramaOptions);
			MiniMap.setStreetView(this.streetView);

			cfg.load()
			   .then($.proxy(this.onDataLoaded,this));

			// $(window).resize($.proxy(this.onResize,this));
			$(window).trigger('resize');
			Carousel.render(this);
		},
		onInfoClicked:function(){
			InfoBox.show();
		},
		goToPrev:function(){
			this.index--;
			if (this.index < 0){
				this.index = this.data.length - 1;
			}

			this.item = this.data[this.index];

			this.setItem(this.item,this.index);
		},
		goToNext:function(){
			this.index++;
			if (this.index >= this.data.length){
				this.index = 0;
			}
			this.item = this.data[this.index];
			this.setItem(this.item,this.index);
		},
		onStreetEmbedClicked:function(){
			this.streetEmbedEl.toggleClass('active');
		},
		onMenuToggleClicked:function(){
			this.el.toggleClass('active');
			this.streetToggleButtonEl.toggleClass('active');
		},
		onAddressButtonClicked:function(){
			this.descriptionEl.toggleClass('active');
		},
		switchToMobile:function(){
			this.desktop = false;
			if (this.active){
				this.setItem(this.item,this.index);
			}
		},
		onToGalleryClicked:function(){
			this.streetToggleButtonEl.removeClass('active');
			this.el.removeClass('active');
			this.descriptionEl.removeClass('active');
			this.backToGallery();
		},
		switchToDesktop:function(){
			this.desktop = true;
			if (this.active){
				this.setItem(this.item,this.index);
			}
		},
		// onResize:function(){
		// 	if (this.active){

		// 	}
		// },
		isActive:function(){
			return this.active;
		},
		onDataLoaded:function(data){
			var marker;
			this.data = data;
			for(var i=0,l=data.length;i<l;i++){
				marker = new google.maps.Marker({
					icon:data[i].oldimgfull,
					position:{lat:data[i].clat,lng:data[i].clng},
					map:this.streetView,
					visible:true,
					zIndex:99999
				});
				marker.userData = data[i];
				marker.addListener('mouseover',$.proxy(this.onMarkerMouseOver,this,marker,i));
				marker.addListener('mouseout',$.proxy(this.onMarkerMouseOut,this,marker,i));
				this.markers.push(marker);
			}
		},
		show:function(item,index){
			this.def = Q.defer();
			this.active = true;
			this.el.show();
            Gallery.show();
			this.setItem(item,index);
           $('.StreetViewWrapper').show().click(function(){
                $('#ToGalleryButton').trigger('click');
           });
			$('body').css({
                   overflow:'hidden'
               });
			return this.def.promise;
		},
		setItem:function(item,index){
			this.item = item;
			this.index = index;
			this.addressEl.html(item.address+' - '+item.date);
			this.descriptionTextEl.html(item.descr);
			this.streetInfoNameEl.html(item.address);
			this.streetInfoYearEl.html(item.date);

			if (this.desktop){
				var marker = this.markers[index];
				// $(window).trigger('resize');
				Carousel.onResize();
				_.forEach(this.markers,function(e,i){
					e.setVisible(false);
				});
				marker.setVisible(true);
				// MiniMap;
				this.streetView.setPosition({lat:marker.userData.lat,lng:marker.userData.lng});
				this.streetView.setPov({
					heading:marker.userData.heading,
					pitch:10
				});
				MiniMap.setItem(item,index);
				Carousel.setItem(item,index);
				google.maps.event.trigger(this.streetView, 'resize');
				google.maps.event.trigger(MiniMap.map, 'resize');
			}else {
				MobileView.show(item,index);
				Carousel.onResize();
				Carousel.setItem(item,index);
			}
		},
		hide:function(){
			this.active = false;
			this.el.hide();
            $('.StreetViewWrapper').hide();
            $('body').css({
                   overflow:'auto'
               });
		},
		onMarkerMouseOver:function(marker,i){
            if($(window).width() > 768) $('.gm-style img[src^="img/full"]').animate({opacity: 0.4},100);
		},
		onMarkerMouseOut:function(marker,i){
            if($(window).width() > 768) $('.gm-style img[src^="img/full"]').animate({opacity: 1},100);
		},
		backToGallery:function(){
			this.el.hide();
            $('.StreetViewWrapper').hide();
            $('body').css({
                   overflow:'auto'
               });
			Gallery.show();
		},

	};

	return new StreetView();
}]);	injector.get("App");
})(document,window,jQuery,Q,new shInjector());
